package service;

import java.util.List;

import javax.ejb.EJB;
import javax.ejb.Stateless;

import org.jboss.logging.Logger;

import domain.catalogue.Categorie;
import domain.catalogue.Marque;
import domain.catalogue.Modele;
import domain.catalogue.Piece;
import domain.catalogue.Type;
import domain.dao.CategorieLocal;
import domain.dao.MarqueLocal;
import domain.dao.ModeleLocal;
import domain.dao.PieceLocal;
import domain.dao.TypeLocal;

@Stateless
public class Service implements ServiceRemote {
	
	@EJB
	private MarqueLocal marqueDAO;
	@EJB
	private TypeLocal typeDAO;
	@EJB
	private CategorieLocal categorieDAO;
	@EJB
	private ModeleLocal modeleDAO;
	@EJB
	private PieceLocal pieceDAO;
	
	private final static Logger logger = Logger.getLogger(Service.class);
	
	
	/*-----------------------------------------------Marque-----------------------------------------------*/
	
	@Override
	public List<Marque> getAllMarques() throws ServiceException {
		List<Marque> listMarque=null;
		try {
			listMarque=marqueDAO.getAll();
		} catch (Exception e) {
			throw new ServiceException("Database Marque : GetAll Error");
		}
		return listMarque;
	}
	
	@Override
	public Marque insert(Marque ma) throws ServiceException {
		Marque marque=null;
		try {
			marque=marqueDAO.insert(ma);
			logger.error("marque successfull insert");
		} catch (Exception e) {
			logger.error("logger error : marque failed insert");
			throw new ServiceException("Database Marque : Insert Error");
		}
		return marque;
	}
	
	@Override
	public Marque delete(Marque ma) throws ServiceException {
		try {
			marqueDAO.delete(ma);
		} catch (Exception e) {
			throw new ServiceException("Database Marque : Delete Error");
		}		
		return ma;
	}
	
	
	/*-------------------------------------------------Type------------------------------------------*/
	
	@Override
	public List<Type> getAllTypes() throws ServiceException {
		List<Type> listType=null;
		try {
			listType=typeDAO.getAll();
		} catch (Exception e) {
			throw new ServiceException("Database Type : GetAll Error");
		}
		return listType;
	}
	
	@Override
	public Type insert(Type ty) throws ServiceException {
		Type type=null;
		try {
			type=typeDAO.insert(ty);
			logger.error("type successfull insert");
		} catch (Exception e) {
			logger.error("logger error : type failed insert");
			throw new ServiceException("Database Type : Insert Error");
		}
		return type;
	}
	@Override
	public Type delete(Type ty) throws ServiceException {
		try {
			typeDAO.delete(ty);
		} catch (Exception e) {
			throw new ServiceException("Database Type : Delete Error");
		}		
		return ty;
	}
	
	
	/*------------------------------------------Categorie---------------------------------------------*/
	
	@Override
	public List<Categorie> getAllCategories() throws ServiceException {
		List<Categorie> listCategorie=null;
		try {
			listCategorie=categorieDAO.getAll();
		} catch (Exception e) {
			throw new ServiceException("Database Categorie : GetAll Error");
		}
		return listCategorie;
	}
	
	@Override
	public Categorie insert(Categorie ca) throws ServiceException {
		Categorie categorie=null;
		try {
			categorie=categorieDAO.insert(ca);
			logger.error("categorie successfull insert");
		} catch (Exception e) {
			logger.error("logger error : categorie failed insert");
			throw new ServiceException("Database Categorie : Insert Error");
		}
		return categorie;
	}
	
	@Override
	public Categorie delete(Categorie ca) throws ServiceException {
		try {
			categorieDAO.delete(ca);
		} catch (Exception e) {
			throw new ServiceException("Database Categorie : Delete Error");
		}		
		return ca;
	}
	
	/*--------------------------------------------Modele----------------------------------------*/
	
	public List<Modele> getModeleByTypeMarque(Marque ma,Type ty) throws ServiceException{
		List<Modele> lm=null;
		try {
			lm=modeleDAO.getBy(ma, ty);
		} catch (Exception e) {
			logger.error("logger error : Modele failed getBy");
			throw new ServiceException("Database Modele : GetBy Error");
		}
		return lm;
	}
	
	/*--------------------------------------Piece--------------------------------------------*/
	
	public void associe (Piece piOrigine, Modele mo) throws ServiceException{
		try{
			pieceDAO.associe(piOrigine, mo);
		} catch(Exception e){
			logger.error("logger error : Piece failed getByOriginale");
			throw new ServiceException(e.getMessage());
		}
		
	}
	public List<Piece> getOriginalesBy(Modele mo, Categorie ca) throws ServiceException{
		List<Piece> lp=null;
		try{
			lp=pieceDAO.getOriginalesBy(mo, ca);
		} catch(Exception e){
			logger.error("logger error : Piece failed getByOriginale");
			throw new ServiceException(e.getMessage());
		}
		return lp;
		
	}
	public List<Piece> getEquivalentesBy(Modele mo, Categorie ca) throws ServiceException{
		List<Piece> lp=null;
		try{
			lp=pieceDAO.getEquivalentesBy(mo, ca);
		} catch(Exception e){
			logger.error("logger error : Piece failed getByEquivalente");
			throw new ServiceException(e.getMessage());
		}
		return lp;
	}
	public List<Piece> getPieceByCat(Categorie ca) throws ServiceException{
		List<Piece> lp=null;
		try{
			lp=pieceDAO.getByCat(ca);
		} catch(Exception e){
			logger.error("logger error : Piece failed getByCat");
			throw new ServiceException(e.getMessage());
		}
		return lp;
	}

}
